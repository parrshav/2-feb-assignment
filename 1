Python
Assignment Questions 
Assignment 
Q1. What are the characteristics of the tuples? Is tuple immutable? 
-Immutable
-Indexing
-Nesting
-Iterable
-length(can store any number of elements)
Yes tuples is immutable
Q2. What are the two tuple methods in python? Give an example of each method. Give a reason why  tuples have only two in-built methods as compared to Lists. 
Two functions are
-  .count()
- .index()
The reason why tuples have only two builtin functions is because theyare immutable 
Q3.  Which collection datatypes in python do not allow duplicate items? Write a code using a set to remove  duplicates from the given list. 
List = [1, 1, 1, 2, 1, 3, 1, 4, 2, 1, 2, 2, 2, 3, 2, 4, 3, 1, 3, 2, 3, 3, 3, 4, 4, 1, 4, 2, 4, 3, 4, 4] 
Sets is the collection of datatype which do not allow duplicate items 
s1=list(set{list[1, 1, 1, 2, 1, 3, 1, 4, 2, 1, 2, 2, 2, 3, 2, 4, 3, 1, 3, 2, 3, 3, 3, 4, 4, 1, 4, 2, 4, 3, 4, 4]})
print(s1)
Q4. Explain the difference between the union() and update() methods for a set. Give an example of  each method. 
union() returns a new set without modifying the original sets, while update()modifies the set in place
union() performs a set-wise union, combining the unique elements from both sets, while update() adds all the elements from the other iterable to the set.
s1=(1,2,3)
s2=(3,4,5)
s3=s1.union(s2) 
pint(s3)
1,2,3,4,5
- s1=(1,2,3)
s2=(3,4,5)
s3=s1.update(s2) 
pint(s3)
1,2,3,4,5
Q5. What is a dictionary? Give an example. Also, state whether a dictionary is ordered or unordered. 
-a dictionary is a collection data type that stores data in key-value pairs
-A dictionary is mutable 
-In a dictionary, keys are unique and used to access the corresponding values. Keys must be of an immutable data type, such as strings, numbers, or tuples. Values can be of any data type, including lists, tuples, sets, or even other dictionaries.
person = {
    "name": "parshav",
    "age": 21,
    "city": "bareilly",
    "occupation": "self employed"
}

Q6. Can we create a nested dictionary? If so, please give an example by creating a simple one-level  nested dictionary. 
Yes, it is possible to create a nested dictionary in Python. A nested dictionary is a dictionary that contains another dictionary as one of its values. This allows for hierarchical or multi-level data structures.
Person={
‘Name’ : ‘Parshav’
‘Age’ :’ 21’
‘address’ : { ‘city’: ‘bareilly’
           ‘street’= ‘vs nagar’
           ‘ho.no.’=’03B’
})
Q7. Using setdefault() method, create key named topics in the given dictionary and also add the value of  the key as this list ['Python', 'Machine Learning’, 'Deep Learning'] 
dict1 = {'language' : 'Python', 'course': 'Data Science Masters'} 
dict1 = {'language': 'Python', 'course': 'Data Science Masters'}
dict1.setdefault('topics', ['Python', 'Machine Learning', 'Deep Learning'])
print(dict1)
Q8. What are the three view objects in dictionaries? Use the three in-built methods in python to display  these three view objects for the given dictionary. 
dict1 = {'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', 'New Zealand']} 
dict_keys: It represents a dynamic view of the keys in the dictionary.
dict_values: It represents a dynamic view of the values in the dictionary.
dict_items: It represents a dynamic view of the key-value pairs in the dictionary.
dict1 = {'Sport': 'Cricket', 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', 'New Zealand']}

# Displaying the dict_keys view object
keys_view = dict1.keys()
print(keys_view)

# Displaying the dict_values view object
values_view = dict1.values()
print(values_view)

# Displaying the dict_items view object
items_view = dict1.items()
print(items_view)
